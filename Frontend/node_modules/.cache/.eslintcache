[{"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\index.js":"1","C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\App.js":"2","C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\component\\forklift_grid.jsx":"4","C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\component\\forklift_form.jsx":"5","C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\Api\\service.js":"6","C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\Api\\client.js":"7","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\index.js":"8","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\App.js":"9","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\reportWebVitals.js":"10","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\component\\forklift_form.jsx":"11","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\component\\forklift_grid.jsx":"12","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\Api\\service.js":"13","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\Api\\client.js":"14"},{"size":536,"mtime":1680794760070,"results":"15","hashOfConfig":"16"},{"size":647,"mtime":1680794699722,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1680623115501,"results":"18","hashOfConfig":"16"},{"size":6498,"mtime":1680623115627,"results":"19","hashOfConfig":"16"},{"size":12413,"mtime":1680623115596,"results":"20","hashOfConfig":"16"},{"size":2532,"mtime":1680623115569,"results":"21","hashOfConfig":"16"},{"size":274,"mtime":1680623115548,"results":"22","hashOfConfig":"16"},{"size":536,"mtime":1680794760070,"results":"23","hashOfConfig":"24"},{"size":647,"mtime":1681295546115,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1680623115501,"results":"26","hashOfConfig":"24"},{"size":12442,"mtime":1681297216051,"results":"27","hashOfConfig":"24"},{"size":6598,"mtime":1681139390942,"results":"28","hashOfConfig":"24"},{"size":2624,"mtime":1681390817969,"results":"29","hashOfConfig":"24"},{"size":274,"mtime":1680864803188,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mxfono",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fzh9jm",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\index.js",[],[],"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\App.js",[],[],"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\component\\forklift_grid.jsx",["76","77","78","79","80","81"],[],"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\component\\forklift_form.jsx",["82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],[],"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\Api\\service.js",[],[],"C:\\Users\\Tamilarasan.D\\Videos\\FinalUseCaseFront-main\\Frontend\\src\\Api\\client.js",[],[],"C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\index.js",[],[],"C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\App.js",[],[],"C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\component\\forklift_form.jsx",["111"],[],"//PC_NO_1\n//Importing the packages,functions.\nimport React, { useEffect, useState } from \"react\";\nimport {useNavigate,useParams} from 'react-router-dom';\nimport {getServiceCenterData,getTrailerDetailsById,insertTrailerDetails,updateTrailerDetails} from '../Api/service';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment/moment';\n\n\n//PC_NO_3\nfunction ForkliftForm() {\n\n    //Creating instance variable for usenavigation() and useParams()\n    let navigation = useNavigate();\n    let params = useParams();\n    // console.log('p',)\n\n    let trailerDetailsObject =\n    {\n        'TrailerNumber' : '',\n        'ServiceCenterId' : '',\n        'Supervisor' : '',\n        'AccidentDate' : '',\n        'AccidentTime' : '',\n        'TrailerArrivedFrom' : '',\n        'DriverName' : '',\n        'LiftTruckNumber' : '',\n        'OperatorName' : '',\n        'DescriptionOfDamage' : '',\n        'DescriptionOfWhatHappened': '',\n        'ServiceCenterName' : ''\n    };\n\n    let trailerDetailsObjectError =\n    {\n        'TrailerNumberError' : '',\n        'ServiceCenterIdError' : '',\n        'SupervisorError' : '',\n        'AccidentDateError' : '',\n        'AccidentTimeError' : '',\n        'TrailerArrivedFromError' : '',\n        'DriverNameError' : '',\n        'LiftTruckNumberError' : '',\n        'OperatorNameError' : '',\n        'DescriptionOfDamageError' : '',\n        'DescriptionOfWhatHappenedError': '',\n    }\n\n    //PC_NO_4\n    //Initailzing the State Variable\n    const [trailerDetails,setTrailerDetails] = useState(trailerDetailsObject);\n    const [trailerDetailsError, setTrailerDetailsError] = useState(trailerDetailsObjectError)\n    const [serviceCenterData, setServiceCenterData] = useState([]);\n\n    //PC_NO_5\n    //Initailzing useEffect Hook with empty dependency\n    useEffect(() => {\n        pageLoad();\n    },[]);\n\n    //PC_NO_6\n    //Creating function to load the Form page.\n    async function pageLoad()\n    {\n        let dropDownData = await getServiceCenterData();\n        setServiceCenterData(dropDownData);\n        if(params.id !== undefined)\n        {\n            let result = await getTrailerDetailsById(params.id);\n            setTrailerDetails(result[0]);\n        }\n    }\n\n    //PC_NO_18\n    //Service Center Data Binding in dropdown\n    const generateServiceCenterDetails = () => {\n        return serviceCenterData.map((obj, index) => {\n            return (\n                <option value={obj.ServiceCenterId} selected={(trailerDetails.ServiceCenterId === obj.ServiceCenterId) ? true : false}>{obj.ServiceCenterName}</option>\n            )\n        })\n    };\n\n    //PC_NO_23\n    // Creating function to handle the input values.\n    function inputHandler(event)\n    {\n        setTrailerDetails({...trailerDetails,[event.target.name] : event.target.value});\n    }\n    console.log(\"tt\",trailerDetails);\n\n    //PC_NO_26\n    //Validation \n    function validation()\n    {\n        let result= true;\n        if(trailerDetails.ServiceCenterId === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"ServiceCenterIdError\" : \"Select any option\"}));\n            result = false;\n        }\n        if(trailerDetails.Supervisor === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"SupervisorError\" : \"Enter Supervisor\"}));\n            result = false;\n        }\n        if(trailerDetails.TrailerNumber === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"TrailerNumberError\" : \"Enter Trailer Number\"}));\n            result = false;\n        }\n        if(trailerDetails.AccidentDate === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"AccidentDateError\" : \"Enter Accident Date\"}));\n            result = false;\n        }\n        if(trailerDetails.AccidentTime === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"AccidentTimeError\" : \"Enter Accident Time\"}));\n            result = false;\n        } \n        if(trailerDetails.TrailerArrivedFrom === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"TrailerArrivedFromError\" : \"Enter Trailer Arrived From\"}));\n            result = false;\n        }\n        if(trailerDetails.DriverName === \" \")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"DriverNameError\" : \"Enter Driver Name \"}));\n            result = false;\n        }\n        if(trailerDetails.LiftTruckNumber === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"LiftTruckNumberError\" : \"Enter Lift Truck Number\"}));\n            result = false;\n        }\n        if(trailerDetails.OperatorName === \"\")\n        {\n            setTrailerDetailsError((trailerDetailsError)=>({...trailerDetailsError,\"OperatorNameError\" : \"Enter Operator Name\"}));\n            result = false;\n        }\n\n        return result;\n    }\n\n    //PC_NO_25\n    //submiting the form\n    async function submitForm() {\n        if(params.id === undefined && validation())\n        {\n            console.log(\"trailerDetails\",trailerDetails);\n            const result = await insertTrailerDetails(trailerDetails);\n            console.log(\"result\",result)\n            if(result.rowsAffected[0] === 1)\n            {\n                window.alert(\"Inserted Successfully\");\n                navigation('/grid');\n            }\n        }\n        else if(params.id !== undefined && validation())\n        {\n            const result = await updateTrailerDetails(trailerDetails);\n           \n            if(result.rowsAffected[0] === 1)\n            {\n                window.alert(\"Trailer Details updated\");\n                navigation('/grid');\n            }\n        }\n    }\n\n\n    \n\n    return (\n        <div className=\"parent-container\">\n            {(params.id !==  undefined)?<div>\n            <h1>Edit Report</h1>\n            </div>:<div>New Report</div>}\n            <div className=\"sub-container\">\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Service Center<span className=\"color-indication\">*</span></label>\n                    <select className=\"inputbox-style\" name=\"ServiceCenterId\" onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false}>\n                        <option value =\"\">Select</option>\n                        {generateServiceCenterDetails()}\n                    </select>\n                    <span className=\"color-indication\">{trailerDetailsError.ServiceCenterIdError}</span>\n                </div>\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Supervisor<span className=\"color-indication\">*</span></label>\n                    <input type=\"text\" className=\"inputbox-style\" name=\"Supervisor\" placeholder=\"Supervisor\" value={trailerDetails.Supervisor} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false} />\n                    <span className=\"color-indication\">{trailerDetailsError.SupervisorError}</span>\n                </div>\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Trailer Number<span className=\"color-indication\">*</span></label>\n                    <input type=\"number\" className=\"inputbox-style\" name=\"TrailerNumber\" placeholder=\"Enter Trailer Number\" value={trailerDetails.TrailerNumber} onChange={(e)=>inputHandler(e)} disabled={(params.id !== undefined) ? true :false} />\n                    <span className=\"color-indication\">{trailerDetailsError.TrailerNumberError}</span>\n                </div>\n            </div>\n\n            <div className=\"sub-container\">\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Accident Date<span className=\"color-indication\">*</span></label>\n                    <input type=\"date\" className=\"inputbox-style\" name=\"AccidentDate\" value={moment(trailerDetails.AccidentDate).format(\"yyyy-MM-DD\")} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false} />\n                    <span className=\"color-indication\">{trailerDetailsError.AccidentDateError}</span>\n                </div>\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Accident Time<span className=\"color-indication\">*</span></label>\n                    <input type=\"time\" className=\"inputbox-style\" name=\"AccidentTime\" value={trailerDetails.AccidentTime} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false}/>\n                    <span className=\"color-indication\">{trailerDetailsError.AccidentTimeError}</span>\n                </div>\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Trailer Arrived From(Service Center)<span className=\"color-indication\">*</span></label>\n                    <input type=\"text\" className=\"inputbox-style\" placeholder=\"Enter Trailer Arrived From\" name=\"TrailerArrivedFrom\" value={trailerDetails.TrailerArrivedFrom} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false}/>\n                    <span className=\"color-indication\">{trailerDetailsError.TrailerArrivedFromError}</span>\n                </div>\n            </div>\n\n            <div className=\"sub-container\">\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Driver/Jockey Name<span className=\"color-indication\">*</span></label>\n                    <input type=\"text\" className=\"inputbox-style\" placeholder=\"Enter Driver/Jockey Name\" name=\"DriverName\" value={trailerDetails.DriverName} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false} />\n                    <span className=\"color-indication\">{trailerDetailsError.DriverNameError}</span>\n                </div>\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Lift Truck Number<span className=\"color-indication\">*</span></label>\n                    <input type=\"number\" className=\"inputbox-style\" placeholder=\"Enter Lift Truck Number\" name=\"LiftTruckNumber\" value={trailerDetails.LiftTruckNumber} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false} />\n                    <span className=\"color-indication\">{trailerDetailsError.LiftTruckNumberError}</span>\n                </div>\n                <div className=\"child-container\">\n                    <label className=\"label-style\">Fork Lift Operator Name<span className=\"color-indication\">*</span></label>\n                    <input type=\"text\" className=\"inputbox-style\" placeholder=\"Enter Operator Name\" name=\"OperatorName\" value={trailerDetails.OperatorName} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false} />\n                    <span className=\"color-indication\">{trailerDetailsError.OperatorNameError}</span>\n                </div>\n            </div>\n\n            <div className=\"sub-container\">\n                <div className=\"description-container\">\n                    <label className=\"label-style\">Description of Damage</label>\n                    <textarea className=\"textarea-style\" name=\"DescriptionOfDamage\" rows=\"4\" placeholder=\"Enter details\" value={trailerDetails.DescriptionOfDamage} onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false} />\n                </div>\n                <div className=\"description-container\">\n                    <label className=\"label-style\">Description of what happened?</label>\n                    <textarea className=\"textarea-style\" rows=\"4\" name=\"DescriptionOfWhatHappened\" value={trailerDetails.DescriptionOfWhatHappened} placeholder=\"Enter details\" onChange={(e)=>inputHandler(e)} disabled={(params.view !== undefined) ? true :false} />\n                </div>\n            </div>\n            \n            <div className=\"btn\">\n               <Link to =\"/\"><button type=\"button\" className=\"cancel\">Cancel</button></Link>\n               {(params.view !== undefined)?<></>:\n                <button type=\"button\" className=\"submit\" id=\"submitbtn\" onClick={()=>submitForm()}>{(params.id === undefined) ? \"Save\":\"Update\"}</button>}\n            </div>\n\n        </div>\n    )\n}\nexport default ForkliftForm;","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\component\\forklift_grid.jsx",["112","113"],["114"],"// PC_NO_3\n// Importing required functions, packages and images.\nimport React, { useEffect, useState } from 'react';\nimport editicon from '../images/editicon.png';\nimport deleteicon from '../images/deleteicon.jpg';\nimport { Link } from \"react-router-dom\";\nimport { getTrailerDetails, deleteTrailerDetailsById} from '../Api/service';\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment/moment';\nimport ReactPaginate from 'react-paginate';\n\n//PC_NO_11\n// Creating a component function\nfunction ForkliftGrid() {\n\n    //Creating instance variable for useNavigation()\n    let navigation = useNavigate();\n\n    //Initializing State Variable\n    const [trailerDetails, setTrailerDetails] = useState([]);\n    const [searchValue, setSearchValue] = useState('');\n    const [page, setPage] = useState(0);\n    const [totalCount, setTotalCount] = useState(0);\n    const [order,setOrder] = useState('');\n    const perPageValue = 4\n    const totalPages = Math.ceil(totalCount / perPageValue);\n\n\n    // Initializing useEffect\n    useEffect(() => {\n\n        // Function for populating Trailer Details\n        populateTrailerDetails(page,order);\n\n    }, [order, page, populateTrailerDetails])\n\n    // PC_NO_12\n    // Creating function to get all the Trailer details\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    async function populateTrailerDetails(page,order) {\n        let result = await getTrailerDetails(searchValue,page,order);\n        setTrailerDetails(result);\n        if(result.length !== 0)\n        {\n            setTotalCount(result[0].TotalValues)\n        }   \n    }\n\n    // PC_NO_57\n    // Creating a function to get the selected page value \n    const changePage = ({ selected }) => {\n        setPage(selected);\n        populateTrailerDetails(selected,order);\n    };\n\n    //PC_NO_32\n    //Creating a function to delete the Trailer Details\n    async function deleteTrailerDetails(event) {\n        if (window.confirm(\"Are you sure want to delete\")) {\n            let result = await deleteTrailerDetailsById(event.target.id);\n            console.log(result)\n            if (result.rowsAffected === 1) {\n                window.alert(\"deleted successfully\");\n                populateTrailerDetails(page,order);\n            }\n        }\n    }\n\n    //PC_NO_47\n    //Creating a function to edit the Trailer Details\n    function editTrailerDetails(event) {\n        navigation(`/form/${event.target.id}`);\n    }\n\n    //PC_NO_51\n    //Creating a function to handle the Search bar\n    function searchHandler(event) {\n        setSearchValue(event.target.value);\n    }\n\n    //PC_NO_28\n    // Creating a function to bind the data in the table\n    const generateTrailerDetails = () => {\n        return trailerDetails.map((obj, index) => {\n            return (\n                <tr className='table-row'>\n                    <td className=\"t-data link\">{obj.ServiceCenterName}</td>\n                    <td className=\"t-data\">{moment(obj.CreatedDate).format('yyyy-MM-DD')}</td>\n                    <td className=\"t-data\">{obj.Supervisor}</td>\n                    <Link to ={`/form/view/${index+1}`} className=\"view\"><td className=\"t-data\">{obj.TrailerNumber}</td></Link>\n                    <td className=\"t-data\">{obj.DriverName}</td>\n                    <td className=\"t-data\">{obj.LiftTruckNumber}</td>\n                    <td className=\"t-data\">{obj.OperatorName}</td>\n                    <td className=\"t-data-center\"><img src={editicon} id={obj.TrailerNumber} className=\"icon-btn\" onClick={(event) => editTrailerDetails(event)} /><img src={deleteicon} id={obj.TrailerNumber} className=\"icon-btn\" onClick={(event) => deleteTrailerDetails(event)} /></td>\n                </tr>\n            )\n        })\n    }\n\n    return (\n        <>\n            <div className=\"parent-container\">\n                <div className=\"sub-container\">\n                    <h3 className=\"Heading\">FORKLIFT/TRAILER DAMAGE</h3>\n                    <div className='btn-right'>\n                        <input type=\"text\" className=\"searchbar-style\" placeholder=\"Search...\" onChange={(e) => searchHandler(e)} />\n                        <button className=\"add-btn\" onClick={() => populateTrailerDetails(0,order)}>Search</button>\n                        {/* PC_NO_43 */}\n                        <Link to=\"/form\"><button className=\"add-btn\">Create New Report</button></Link>\n                    </div>\n                </div>\n                <div className=\"sub-container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th className=\"table-column\">Service Center</th>\n                                <th className=\"table-column\">Created Date</th>\n                                <th className=\"table-column\">Supervisor</th>\n                                {/* PC_NO_61 */}\n                                <th className=\"table-column\">Trailer#<div class=\"btn-right\"><button className='order-btn' value=\"asc\" onClick={(event)=>{setOrder(event.target.value);populateTrailerDetails(page,event.target.value)}}>↑</button><button className='order-btn' value=\"desc\" onClick={(event)=>{setOrder(event.target.value);populateTrailerDetails(page,event.target.value)}}>↓</button></div></th>\n                                <th className=\"table-column\">Driver</th>\n                                <th className=\"table-column\">Lift#</th>\n                                <th className=\"table-column\">Operator</th>\n                                <th className=\"table-column-center\">Action</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {generateTrailerDetails()}\n                        </tbody>\n                    </table>\n                    {(trailerDetails.length === 0) ? <div className='Center-Style'> <h3>No Trailer Details Found!</h3> </div> : <></>}\n                    {(trailerDetails.length !== 0) ?\n                    <>\n                    <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    pageCount={totalPages}\n                    onPageChange={changePage}\n                    containerClassName={\"navigationButtons\"}\n                    previousLinkClassName={\"previousButton\"}\n                    nextLinkClassName={\"nextButton\"}\n                    disabledClassName={\"navigationDisabled\"}\n                    activeClassName={\"navigationActive\"}/></>:<></>}\n                </div>\n            </div>\n        </>\n    )\n}\nexport default ForkliftGrid;","C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\Api\\service.js",[],[],"C:\\Users\\Tamilarasan.D\\Documents\\FinalUseCaseFront\\Frontend\\src\\Api\\client.js",[],[],[],{"ruleId":"115","severity":1,"message":"116","line":35,"column":8,"nodeType":"117","endLine":35,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":42,"column":26,"nodeType":"121","messageId":"122","endLine":42,"endColumn":28},{"ruleId":"119","severity":1,"message":"123","line":61,"column":37,"nodeType":"121","messageId":"122","endLine":61,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":93,"column":51,"nodeType":"126","endLine":93,"endColumn":164},{"ruleId":"124","severity":1,"message":"125","line":93,"column":164,"nodeType":"126","endLine":93,"endColumn":281},{"ruleId":"119","severity":1,"message":"123","line":131,"column":45,"nodeType":"121","messageId":"122","endLine":131,"endColumn":47},{"ruleId":"115","severity":1,"message":"127","line":59,"column":7,"nodeType":"117","endLine":59,"endColumn":9,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"120","line":67,"column":22,"nodeType":"121","messageId":"122","endLine":67,"endColumn":24},{"ruleId":"119","severity":1,"message":"123","line":97,"column":43,"nodeType":"121","messageId":"122","endLine":97,"endColumn":45},{"ruleId":"119","severity":1,"message":"123","line":102,"column":38,"nodeType":"121","messageId":"122","endLine":102,"endColumn":40},{"ruleId":"119","severity":1,"message":"123","line":107,"column":41,"nodeType":"121","messageId":"122","endLine":107,"endColumn":43},{"ruleId":"119","severity":1,"message":"123","line":112,"column":40,"nodeType":"121","messageId":"122","endLine":112,"endColumn":42},{"ruleId":"119","severity":1,"message":"123","line":117,"column":40,"nodeType":"121","messageId":"122","endLine":117,"endColumn":42},{"ruleId":"119","severity":1,"message":"123","line":122,"column":46,"nodeType":"121","messageId":"122","endLine":122,"endColumn":48},{"ruleId":"119","severity":1,"message":"123","line":127,"column":38,"nodeType":"121","messageId":"122","endLine":127,"endColumn":40},{"ruleId":"119","severity":1,"message":"123","line":132,"column":43,"nodeType":"121","messageId":"122","endLine":132,"endColumn":45},{"ruleId":"119","severity":1,"message":"123","line":137,"column":40,"nodeType":"121","messageId":"122","endLine":137,"endColumn":42},{"ruleId":"119","severity":1,"message":"123","line":149,"column":22,"nodeType":"121","messageId":"122","endLine":149,"endColumn":24},{"ruleId":"119","severity":1,"message":"123","line":154,"column":39,"nodeType":"121","messageId":"122","endLine":154,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":160,"column":27,"nodeType":"121","messageId":"122","endLine":160,"endColumn":29},{"ruleId":"119","severity":1,"message":"123","line":164,"column":39,"nodeType":"121","messageId":"122","endLine":164,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":177,"column":25,"nodeType":"121","messageId":"122","endLine":177,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":183,"column":134,"nodeType":"121","messageId":"122","endLine":183,"endColumn":136},{"ruleId":"119","severity":1,"message":"120","line":191,"column":199,"nodeType":"121","messageId":"122","endLine":191,"endColumn":201},{"ruleId":"119","severity":1,"message":"120","line":196,"column":215,"nodeType":"121","messageId":"122","endLine":196,"endColumn":217},{"ruleId":"119","severity":1,"message":"120","line":204,"column":207,"nodeType":"121","messageId":"122","endLine":204,"endColumn":209},{"ruleId":"119","severity":1,"message":"120","line":209,"column":178,"nodeType":"121","messageId":"122","endLine":209,"endColumn":180},{"ruleId":"119","severity":1,"message":"120","line":214,"column":231,"nodeType":"121","messageId":"122","endLine":214,"endColumn":233},{"ruleId":"119","severity":1,"message":"120","line":222,"column":213,"nodeType":"121","messageId":"122","endLine":222,"endColumn":215},{"ruleId":"119","severity":1,"message":"120","line":227,"column":224,"nodeType":"121","messageId":"122","endLine":227,"endColumn":226},{"ruleId":"119","severity":1,"message":"120","line":232,"column":212,"nodeType":"121","messageId":"122","endLine":232,"endColumn":214},{"ruleId":"119","severity":1,"message":"120","line":240,"column":220,"nodeType":"121","messageId":"122","endLine":240,"endColumn":222},{"ruleId":"119","severity":1,"message":"120","line":244,"column":232,"nodeType":"121","messageId":"122","endLine":244,"endColumn":234},{"ruleId":"119","severity":1,"message":"120","line":250,"column":30,"nodeType":"121","messageId":"122","endLine":250,"endColumn":32},{"ruleId":"119","severity":1,"message":"123","line":251,"column":112,"nodeType":"121","messageId":"122","endLine":251,"endColumn":114},{"ruleId":"115","severity":1,"message":"127","line":59,"column":7,"nodeType":"117","endLine":59,"endColumn":9,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"125","line":94,"column":51,"nodeType":"126","endLine":94,"endColumn":164},{"ruleId":"124","severity":1,"message":"125","line":94,"column":164,"nodeType":"126","endLine":94,"endColumn":281},{"ruleId":"115","severity":1,"message":"130","line":40,"column":5,"nodeType":"131","endLine":47,"endColumn":6,"suppressions":"132"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'order', 'page', and 'populateTrailerDetails'. Either include them or remove the dependency array.","ArrayExpression",["133"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'pageLoad'. Either include it or remove the dependency array.",["134"],["135"],"The 'populateTrailerDetails' function makes the dependencies of useEffect Hook (at line 35) change on every render. To fix this, wrap the definition of 'populateTrailerDetails' in its own useCallback() Hook.","FunctionDeclaration",["136"],{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"139","fix":"141"},{"kind":"142","justification":"143"},"Update the dependencies array to be: [order, page, populateTrailerDetails]",{"range":"144","text":"145"},"Update the dependencies array to be: [pageLoad]",{"range":"146","text":"147"},{"range":"148","text":"147"},"directive","",[1158,1160],"[order, page, populateTrailerDetails]",[1831,1833],"[pageLoad]",[1832,1834]]